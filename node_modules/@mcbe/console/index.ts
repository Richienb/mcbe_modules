import krlog from "krlog";
import { tellraw, tellrawAll } from "@mcbe/system_server";

const LOG_LEVEL_PREFIX:string[] = [];

LOG_LEVEL_PREFIX[krlog.Level.Verbose] = 'ยง7';
LOG_LEVEL_PREFIX[krlog.Level.Message] = '';
LOG_LEVEL_PREFIX[krlog.Level.Warning] = 'ยง4';
LOG_LEVEL_PREFIX[krlog.Level.Error] = 'ยงc';

const listeners = new Map<string, (level:krlog.Level, message:string)=>void>();

function mainListener(level:krlog.Level, message:string):void
{
    tellrawAll([LOG_LEVEL_PREFIX[level] + message]);
}

const mcConsole = {
    message(target:string, level:krlog.Level, msg:string)
    {
        tellraw(target, [LOG_LEVEL_PREFIX[level] + msg]);
    },

    /**
     * @param target user name
     */
    addTarget(target:string):void
    {
        if (listeners.has(target)) return;
        function printTo(level:krlog.Level, msg:string):void
        {
            mcConsole.message(target, level, msg);
        }
        krlog.listener.on(printTo);
        listeners.set(target, printTo);
    },
    
    /**
     * @param target user name
     */
    removeTarget(target:string):void
    {
        const listener = listeners.get(target);
        if (listener)
        {
            listeners.delete(target);
            krlog.listener.remove(listener);
        }
    },
    install(disableDefaultChatLog:boolean = false):boolean
    {
        if (!krlog.install()) return false;
        if (!disableDefaultChatLog)
        {
            setTimeout(()=>{
                if (listeners.size !== 0) return;
                krlog.listener.on(mainListener);
            }, 5000);
        }
        return true;
    }
};

export default mcConsole;
